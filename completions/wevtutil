#!/usr/bin/env sh

# TODO: cull options lists when options have been used

_wevtutil()
{
    COMPREPLY=()

    local cur=$(printf '%q' "${COMP_WORDS[$COMP_CWORD]}")
    local prev=${COMP_WORDS[$COMP_CWORD-1]}
    local options=''
    local common_options="/remote\\: /username\\: /password\\: \
        /authentication\\:default /authentication\\:negotiate \
        /authentication\\:kerberos /authentication\\:ntlm /unicode\\:true \
        /unicode\\:false"

    if [[ $cur == *: ]]; then
        compopt -o nospace
    fi

    if [[ $COMP_CWORD -eq 1 ]]; then
        local commands='enum-logs get-log set-log enum-publishers \
            get-publisher install-manifest uninstall-manifest query-events \
            get-log-info export-log archive-log clear-log el gl sl ep gp im \
            um qe gli epl al cl /?'

        COMPREPLY=( $( compgen -W "$commands" -- $cur ) )

    elif [[ $prev == '/?' ]]; then
        return 0

    elif [[ $cur == '/?' ]]; then
        return 0

    else
        local command=${COMP_WORDS[1]}

        case "$command" in

            al)
                ;&
            archive-log)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    options=''
                else
                    compopt -o nospace
                    options="/locale\\: ${common_options}"
                fi
                ;;

            cl)
                ;&
            clear-log)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil el`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                else
                    compopt -o nospace
                    options="/backup\\: ${common_options}"
                fi
                ;;

            um)
                ;&
            uninstall-manifest)
                ;&
            el)
                ;&
            enum-logs)
                ;&
            ep)
                ;&
            enum-publishers)
                options="${common_options}"
                ;;

            epl)
                ;&
            export-log)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil el`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                elif [[ $COMP_CWORD -eq 3 ]]; then
                    options=''
                else
                    options="/logfile\\:true /logfile\\:false \
                        /structuredquery\\:true /structuredquery\\:false /query\\: \
                        /overwrite\\:true /overwrite\\:false ${common_options}"
                fi
                ;;

            gl)
                ;&
            get-log)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil el`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                else
                    options="/format\\:xml /format\\:text ${common_options}"
                fi
                ;;

            gp)
                ;&
            get-publisher)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil ep`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                else
                    options="/getevents\\:true /getevents\\:false \
                        /getmessage\\:true /getmessage\\:false /format\\:xml \
                        /format\\:text ${common_options}"
                fi
                ;;

            im)
                ;&
            install-manifest)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    options=''
                else
                    options="/resourceFilePath\\: /messageFilePath\\: \
                        /parameterFilePath\\: ${common_options}"
                fi
                ;;

            qe)
                ;&
            query-events)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil el`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                else
                    options="/logfile\\:true /logfile\\:false \
                        /structuredquery\\:true /structuredquery\\:false /query\\: \
                        /bookmark\\: /savebookmark\\: /reversedirection\\:true \
                        /reversedirection\\:false /format\\:xml /format\\:text \
                        /format\\:renderedxml /locale\\: /count\\: /element\\: \
                        ${common_options}"
                fi
                ;;

            sl)
                ;&
            set-log)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`wevtutil el`
                    options=${options// /\\\ }
                    options=${options///}
                    options=${options,,}
                else
                    options="/enabled\\:true /enabled\\:false /quiet\\:true \
                        /quiet\\:false /filemax\\: /isolation\\:system \
                        /isolation\\:application /isolation\\:custom \
                        /logfilename\\: /retention\\:true /retention\\:false \
                        /autobackup\\:true /autobackup\\:false /maxsize\\: /level\\: \
                        /keywords\\: /config\\: ${common_options}"
                fi
                ;;

        esac

        COMPREPLY=( $( compgen -W '${options}' -- ${cur} ) )

    fi

    return 0
}

complete -o default -F _wevtutil wevtutil wevtutil.exe

