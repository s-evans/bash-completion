# Linux route(8) completion                                -*- shell-script -*-

if [[ $OSTYPE == *linux* ]]; then
    _route()
    {
        local cur prev words cword
        _init_completion || return

        if [[ $prev == dev ]]; then
            _available_interfaces
            return 0
        fi

        # Remove already given options from completions
        local opt found i
        for opt in add del -host -net netmask metric mss window irtt reject mod \
            dyn reinstate dev default gw; do
            found=false
            for (( i=1; i < ${#words[@]}-1; i++ )); do
                [[ ${words[i]} == $opt ]] && found=true && break
            done
            $found || COMPREPLY[${#COMPREPLY[@]}]="$opt"
        done

        COMPREPLY=( $( compgen -W '"${COMPREPLY[@]}"' -- "$cur" ) )
    } &&
    complete -F _route route
elif [[ $OSTYPE == cygwin ]]; then
    # TODO: support ipv6
    _route()
    {
        local cur=$(printf '%q' "${COMP_WORDS[COMP_CWORD]}")
        local commands=("print" "add" "change" "delete")
        local options=''

        if [[ "${COMP_WORDS[1]}" == -p && $COMP_CWORD -eq 2 ]]; then
            COMPREPLY=( $( compgen -W 'add' -- $cur ) )
        elif [[ "${COMP_WORDS[1]}" == -* && $COMP_CWORD -eq 2 ]]; then
            COMPREPLY=( $( compgen -W '${commands[@]}' -- $cur ) )
        elif [[ $COMP_CWORD -eq 1 ]] ; then
            COMPREPLY=( $( compgen -W '-f -p -4 -6 ${commands[@]}' -- $cur ) )
        else
            declare -i count=0
            local command=''
            for word in ${COMP_WORDS[@]::${COMP_CWORD}} ; do
                for option in ${commands[@]} ; do
                    if [[ "${option}" == "${word}" ]]; then
                        command=${option}
                        break
                    fi
                done
                if [[ -n $command ]]; then
                    break
                fi
                count+=1
            done

            count=$COMP_CWORD-$count

            case "$command" in
                print)
                    # NOTE: no meaningful completions available
                    ;;

                add)
                    case $count in
                        2)
                            options='mask'
                            ;;
                        5)
                            options='metric'
                            ;;
                        7)
                            options='if'
                            ;;
                        8)
                            local IFS=$'\n'
                            options=`route -4 print | grep -A 100000 "Interface List" | grep -B 10000 "^$" | head -n -2 | tail -n +2 | sed 's/^ \+\| \+$//' | sed 's/\([0-9]\+\).*/\1/'`
                            ;;
                    esac
                    ;;

                change)
                    case $count in
                        1)
                            local IFS=$'\n'
                            options=`route -4 print | grep -A 100000 "Network Destination" | grep -B 10000 "=" | head -n -1 | tail -n +2  | sed 's, \+, ,g' | sed 's/^ \| $//' | sed 's/ [0-9]\+$/ metric&/' | sed 's/ [^ ]\+ metric/ metric/' | sed 's/ / mask /' | sed 's/On-link/0.0.0.0/'`
                            ;;
                        2)
                            options='mask'
                            ;;
                        5)
                            options='metric'
                            ;;
                        7)
                            options='if'
                            ;;
                        8)
                            local IFS=$'\n'
                            options=`route -4 print | grep -A 100000 "Interface List" | grep -B 10000 "^$" | head -n -2 | tail -n +2  |  sed 's/^ \+\| \+$//' | sed 's/\([0-9]\+\).*/\1/'`
                            ;;
                    esac
                    ;;

                delete)
                    case $count in
                        1)
                            local IFS=$'\n'
                            options=`route -4 print | grep -A 100000 "Network Destination" | grep -B 10000 "=" | head -n -1 | tail -n +2  | sed 's, \+, ,g' | sed 's/^ \| $//' | sed 's/ [0-9]\+$/ metric&/' | sed 's/ [^ ]\+ metric/ metric/' | sed 's/ / mask /' | sed 's/On-link/0.0.0.0/'`
                            ;;
                    esac
                    ;;
            esac

            COMPREPLY=( $( compgen -W '${options}' -- $cur ) )
        fi

        return 0
    } &&
    complete -F _route route route.exe
fi

# ex: ts=4 sw=4 et filetype=sh
