#!/usr/bin/env sh

_windows_task_images()
{
    local options=`tasklist /fo list | sed -e '/^Image/ !d' -e 's/^Image Name: \+//' | sort | uniq`

    # escape bash tokenizer strings and separate with newlines
    local IFS=$'\n'
    options=$(printf '%q\n' $options)

    # escape bash completion word breaks that aren't otherwise escaped by "printf '%q'"
    options=`echo "$options" | sed 's/[:=]/\\\&/g'`

    # make lowercase for convenience
    options=${options,,}

    # return as newline separated values
    echo "$options"
}

_windows_taskkill()
{
    COMPREPLY=()

    local cur=$(printf '%q' "${COMP_WORDS[$COMP_CWORD]}")
    local prev=${COMP_WORDS[$COMP_CWORD-1]}

    if [[ $prev == "/?" ]]; then
        return 0
    fi

    # TODO: cull options list 

    local options='/f /t /im /pid /fi /p /s /u /?'

    # Command-specific arguments
    case "$prev" in

        /s)
            options=''
            ;;

        /u)
            options=''
            ;;

        /p)
            options=''
            ;;

        /fi)
            # TODO: lots of options here...
            options=''
            ;;

        /pid)
            _pids
            ;;

        /im)
            local IFS=$'\n'
            options=$(_windows_task_images)
            ;;

    esac

    if [ -n "$options" -a -z "$COMPREPLY" ]; then
        COMPREPLY=( $(compgen -W '$options' -- "${cur,,}" ) )
    fi

    return 0
}

complete -o default -F _windows_taskkill taskkill taskkill.exe

