#!/usr/bin/env sh

_w32tm()
{
    local cur prev words cword options cmd
    _init_completion
    cur=$(printf '%q' "${cur,,}")

    if [[ $cword -eq 1 ]] ; then
        local commands='/register /unregister /monitor /ntte /ntpte /resync
        /stripchart /config /tz /dumpreg /query /debug /?'
        COMPREPLY=( $( compgen -W "$commands" -- "$cur" ) )
        return
    fi

    cmd=$(printf '%q' "${words[1]}")

    case $cmd in

        /ntte|/register|/ntpte|/unregister|/tz|/?)
            return
            ;;

        /monitor)
            # TODO: cull options list
            options='/domain\: /computers\: /threads\: /ipprotocol\:4 /ipprotocol\:6 /nowarn'
            ;;

        /resync)
            # TODO: cull options list
            options='/computer\: /nowait /rediscover /soft'
            ;;

        /stripchart)
            if [[ $cword -eq 2 ]]; then
                options='/computer\:'
            else
                # TODO: cull options list
                options='/period\: /dataonly /samples\: /packetinfo /ipprotocol\:4
                /ipprotocol\:6'
            fi
            ;;

        /config)
            # TODO: cull options list
            options='/computer\: /update /manualpeerlist\: /syncfromflags\:all
            /syncfromflags\:manual /syncfromflags\:domhier /syncfromflags\:no
            /localclockdispersion\: /reliable\:yes /reliable\:no
            /largephaseoffset\:'
            ;;

        /dumpreg)
            # TODO: cull options list
            options='/subkey\: /computer\:'
            ;;

        /query)
            if [[ $cword -eq 2 ]]; then
                options='/source /configuration /peers /status /computer\:'
            elif [[ ${words[2]} == /computer\\:* ]]; then
                if [[ $cword -eq 3 ]]; then
                    options='/source /configuration /peers /status'
                elif [[ $cword -eq 4 ]]; then
                    options='/verbose'
                fi
            elif [[ $cword -eq 3 ]]; then
                options='/verbose'
            fi
            ;;

        /debug)
            if [[ $cword -eq 2 ]]; then
                options='/disable /enable'
            elif [[ ${words[2]} == /enable ]]; then
                if [[ $cword -eq 3 ]]; then
                    options='/file\:'
                elif [[ $cword -eq 4 ]]; then
                    options='/size\:'
                elif [[ $cword -eq 5 ]]; then
                    options='/entries\:'
                elif [[ $cword -eq 6 ]]; then
                    options='/truncate'
                fi
            fi
            ;;

    esac

    COMPREPLY=( $( compgen -W '$options' -- "$cur" ) )
    [[ $COMPREPLY == *: ]] && compopt -o nospace
}

complete -o default -F _w32tm w32tm w32tm.exe

