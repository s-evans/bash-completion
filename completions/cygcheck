#!/usr/bin/env sh

# TODO: pass completion off to other function for the associated command
# TODO: remove mutually exclusive options

_cygcheck_list()
{
    cygcheck -c -d | sed -e '1,2d' -e 's/ .*//g'
}

_cygcheck()
{
    local cur prev words cword options IFS
    _init_completion
    cur=$(printf '%q' "${cur,,}")

    if [[ $cword -eq 1 ]]; then
        options='-c --check-setup -s --sysinfo -k --keycheck -f --find-package
        -l --list-package -p --package-query -h --help
        --delete-orphaned-installation-keys --enable-unique-object-names
        --disable-unique-object-names --show-unique-object-names -v --verbose'
        COMPREPLY=( $(compgen -W '$options' -- "$cur" ) )
        return
    fi

    case ${words[1]} in

        -h|-v|--help|--verbose)
            if [[ $cword -eq 2 ]]; then
                options='-v -h --verbose --help'

            fi
            ;;

        -c|--check-setup)
            if [[ $cword -eq 2 ]]; then
                IFS=$'\n'
                if [[ $cur != -* ]]; then
                    options=$(_cygcheck_list)
                fi

                options+=$'\n''-d' 
                options+=$'\n''--dump-only'

            elif [[ $cword -eq 3 && ( ${words[2]} == -d || ${words[2]} == --dump-only ) ]]; then
                IFS=$'\n'
                options=$(_cygcheck_list)

            fi
            ;;

        -s|--sysinfo)
            if [[ $cword -ge 2 && $cword -le 4 ]]; then
                options='-r --registry -v --verbose -h --help'

            fi
            ;;

        -l|--list-package)
            IFS=$'\n'
            options=$(_cygcheck_list)
            ;;

        -f|-p|--find-package|--package-query|--enable-unique-object-names|--disable-unique-object-names|--show-unique-object-names)
            return
            ;;

    esac

    COMPREPLY=( $(compgen -W '$options' -- "$cur" ) )
}

complete -o default -F _cygcheck cygcheck cygcheck.exe

