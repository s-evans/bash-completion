#!/usr/bin/env sh

_scm_services()
{
    local services=$(wmic service get name | sed -e '1d' -e '$d' -e 's/\r//' -e 's/ \+$//')
    local IFS=$'\n'
    services=$(printf '%q\n' $services)
    services=`echo "$services" | sed 's/[:=]/\\\&/g'`
    services=${services,,}
    echo "$services"
}

_servicecontrolmanager()
{
    COMPREPLY=()

    local cur=$(printf '%q' "${COMP_WORDS[$COMP_CWORD]}")
    local prev=${COMP_WORDS[$COMP_CWORD-1]}
    local options=''

    if [[ $prev == '/?' ]]; then
        return
    fi

    if [[ $COMP_CWORD -eq 1 ]] ; then
        options="query queryex start pause interrogate continue stop \
            config description failure failureflag sidtype privs qc \
            qdescription qfailure qfailureflag qsidtype qprivs qtriggerinfo \
            qpreferrednode delete create control sdshow sdset showsid \
            triggerinfo preferrednode getdisplayname getkeyname enumdepend /?"
        COMPREPLY=( $(compgen -W '$options' -- "$cur" ) )
        return
    fi

    local cmd=${COMP_WORDS[1]}

    # Command-specific arguments
    case "$cmd" in

        query)
            ;&
        queryex)
            case $prev in
                'type\=')
                    options='driver service userservice all'
                    ;;

                'state\=')
                    options='inactive all'
                    ;;

                'bufsize\=')
                    options=''
                    ;;

                'group\=')
                    options=''
                    ;;

                'ri\=')
                    options=''
                    ;;

                *)
                    local IFS=$'\n'
                    if [[ $COMP_CWORD -eq 2 ]]; then
                        options=`_scm_services`
                    fi
                    # TODO: if $COMP_WORDS[3] is a service, don't show the below options
                    # TODO: cull the options list if used
                    options+=$'\n''type\='
                    options+=$'\n''state\='
                    options+=$'\n''bufsize\='
                    options+=$'\n''ri\='
                    options+=$'\n''group\='
                    ;;
            esac

            ;;

        start)
            ;&

        pause)
            ;&

        interrogate)
            ;&

        continue)
            ;&

        stop)
            ;&

        description)
            ;&

        qc)
            ;&

        qdescription)
            ;&

        qfailure)
            ;&

        qfailureflag)
            ;&

        qsidtype)
            ;&

        qprivs)
            ;&

        qtriggerinfo)
            ;&

        qpreferrednode)
            ;&

        showsid)
            ;&

        getdisplayname)
            ;&

        getkeyname)
            ;&

        enumdepend)
            ;&

        delete)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            fi
            ;;

        config)
            ;&

        create)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`

            elif [[ $COMP_CWORD -eq 3 ]]; then
                options='binpath\='

            elif [[ $COMP_CWORD -gt 4 ]]; then

                case $prev in

                    'depend\=')
                        # TODO: forwardslash separated
                        # TODO: nospace
                        local IFS=$'\n'
                        options=`_scm_services`
                        ;;

                    'password\=')
                        options=''
                        ;;

                    'displayname\=')
                        options=''
                        ;;

                    'obj\=')
                        # TODO: get objects?
                        options=''
                        ;;

                    'group\=')
                        options=''
                        ;;

                    'tag\=')
                        options='yes no'
                        ;;

                    'error\=')
                        options='normal severe critical ignore'
                        ;;

                    'start\=')
                        options='boot system auto demand disabled delayed-auto'
                        ;;

                    'type\=')
                        options='own share interact kernel filesys rec'
                        ;;

                    *)
                        # cull the list of switches if they've been used
                        local option_list=( 'type\=' 'start\=' 'error\=' 'group\='
                        'tag\=' 'depend\=' 'obj\=' 'displayname\=' 'password\=')

                        for option in ${option_list[@]} ; do
                            local found=0

                            for word in ${COMP_WORDS[@]::$COMP_CWORD} ; do
                                if [[ "$word" == "$option" ]]; then
                                    found=1 
                                    break
                                fi
                            done

                            if [[ $found -eq 0 ]]; then
                                options+="$option "
                            fi
                        done

                        ;;
                esac
            fi
            ;;

        control)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                options="paramchange netbindadd netbindremove netbindenable \
                    netbinddisable"
            fi
            ;;

        failure)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`

            else
                case $prev in
                    reset\=)
                        ;;

                    reboot\=)
                        ;;

                    command\=)
                        ;;

                    actions\=)
                        # TODO: could be more detailed...
                        options="run restart reboot"
                        ;;

                    *)
                        # TODO: cull the options list
                        options="reset\= reboot\= command\= actions\="
                        ;;
                esac
            fi
            ;;

        failureflag)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                # TODO: list flags?
                options=''
            fi
            ;;

        sidtype)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                options="none unrestricted restricted"
            fi
            ;;

        privs)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`

            else
                cur=$(echo "$cur" | sed -e 's,[^/]*/,,g')
                compopt -o nospace
                options="seassignprimarytokenprivilege/ seauditprivilege/
                    sebackupprivilege/ sechangenotifyprivilege/
                    secreateglobalprivilege/ secreatepagefileprivilege/
                    secreatepermanentprivilege/ secreatesymboliclinkprivilege/
                    secreatetokenprivilege/ sedebugprivilege/
                    seenabledelegationprivilege/ seimpersonateprivilege/
                    seincreasebasepriorityprivilege/ seincreasequotaprivilege/
                    seincreaseworkingsetprivilege/ seloaddriverprivilege/
                    selockmemoryprivilege/ semachineaccountprivilege/
                    semanagevolumeprivilege/ seprofilesingleprocessprivilege/
                    serelabelprivilege/ seremoteshutdownprivilege/
                    serestoreprivilege/ sesecurityprivilege/
                    seshutdownprivilege/ sesyncagentprivilege/
                    sesystemenvironmentprivilege/ sesystemprofileprivilege/
                    sesystemtimeprivilege/ setakeownershipprivilege/
                    setcbprivilege/ setimezoneprivilege/
                    setrustedcredmanaccessprivilege/ seundockprivilege/
                    seunsolicitedinputprivilege/"

            fi
            ;;

        sdshow)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                # TODO: SDDL?
                options=''
            fi
            ;;

        sdset)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                # TODO: SDDL?
                options=''
            fi
            ;;

        triggerinfo)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`

            else
                # TODO: get actual UUIDs and HwIds from the system
                # TODO: compopt -o nospace if one return from compgen, and it ends with forwardslash
                options="start/device/ start/custom/
                    stop/custom/ start/strcustom/
                    stop/strcustom/ start/lvlcustom/
                    stop/lvlcustom/ start/kwanycustom/
                    stop/kwanycustom/ start/kwallcustom/
                    stop/kwallcustom/ start/networkon stop/networkoff
                    start/domainjoin stop/domainleave start/portopen/parameter
                    stop/portclose/parameter start/machinepolicy start/userpolicy
                    start/rpcinterface/UUID start/namedpipe/pipename delete"

            fi
            ;;

        preferrednode)
            if [[ $COMP_CWORD -eq 2 ]]; then
                local IFS=$'\n'
                options=`_scm_services`
            elif [[ $COMP_CWORD -eq 3 ]]; then
                # TODO: list nodes?
                options=''
            fi
            ;;

    esac

    if [ -n "$options" -a -z "$COMPREPLY" ]; then
        COMPREPLY=( $(compgen -W '$options' -- "$cur" ) )
    fi

    return 0
}

complete -o default -F _servicecontrolmanager sc sc.exe

