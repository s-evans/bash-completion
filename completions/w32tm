#!/usr/bin/env sh

_w32tm_domains()
{
    local IFS options
    IFS=$'\n'
    local options=$(net view /domain 2> /dev/null | sed -e '1,/^-/d' -e '$d' -e 's/\W*$//' -e '/ /d')
    printf '%q\n' ${options,,} | sed -e 's/[:=]/\\&/g' -e "/''/d"
}

_w32tm_computer_names()
{
    local IFS options
    IFS=$'\n'
    local options=$(net view /all 2> /dev/null | sed -e '/^\\\\/!d' -e 's/ .*//' -e 's/^\\\\//')
    printf '%q\n' ${options,,} | sed -e 's/[:=]/\\&/g' -e "/''/d"
}

_w32tm()
{
    local cur prev words cword options IFS cmds
    _init_completion
    cur=$(printf '%q' "${cur,,}")

    if [[ $cword -eq 1 ]] ; then
        COMPREPLY=( $( compgen -W '/register /unregister /monitor /ntte /ntpte
        /resync /stripchart /config /tz /dumpreg /query /debug /?' -- $cur ) )
        return
    fi

    cmds=( ${words[@]::cword} ) 

    case ${words[1]} in

        /ntte|/register|/ntpte|/unregister|/tz|/?)
            return
            ;;

        /monitor)
            case ${words[cword]} in

                /domain\\:*)
                    IFS=$'\n'
                    options=$(printf '/domain\:%s\n' $(_w32tm_domains))
                    ;;

                /computers\\:*)
                    IFS=$'\n'
                    local prefix=$(printf "$cur" | sed 's/\([:,]\)[^:,]*$/\1/')
                    options=$(printf "$prefix\*%s,\n$prefix%s,\n" $(_w32tm_computer_names))
                    ;;

                *)
                    options=('/domain\:' '/computers\:' '/threads\:'
                    '/ipprotocol\:4' '/ipprotocol\:6' '/nowarn')
                    options=$(_complement cmds[@] options[@])
                    ;;

            esac
            ;;

        /resync)
            case ${words[cword]} in

                /computer\\:*)
                    IFS=$'\n'
                    options=$(printf '/computer\:%s\n' $(_w32tm_computer_names))
                    ;;

                *)
                    options=('/computer\:' '/nowait' '/rediscover' '/soft')
                    options=$(_complement cmds[@] options[@])
                    ;;

            esac
            ;;

        /stripchart)
            if [[ $cword -eq 2 ]]; then
                case ${words[cword]} in

                    /computer\\:*)
                        IFS=$'\n'
                        options=$(printf '/computer\:%s\n' $(_w32tm_computer_names))
                        ;;

                    *)
                        options='/computer\:'
                        ;;

                esac

            else
                options=('/period\:' '/dataonly' '/samples\:' '/packetinfo'
                '/ipprotocol\:4' '/ipprotocol\:6')
                options=$(_complement cmds[@] options[@])

            fi
            ;;

        /config)
            case ${words[cword]} in

                /computer\\:*)
                    IFS=$'\n'
                    options=$(printf '/computer\:%s\n' $(_w32tm_computer_names))
                    ;;

                *)
                    options=('/computer\:' '/update' '/manualpeerlist\:'
                    '/syncfromflags\:all' '/syncfromflags\:manual'
                    '/syncfromflags\:domhier' '/syncfromflags\:no'
                    '/localclockdispersion\:' '/reliable\:yes' '/reliable\:no'
                    '/largephaseoffset\:')
                    options=$(_complement cmds[@] options[@])
                    ;;

            esac
            ;;

        /dumpreg)
            case ${words[cword]} in

                /computer\\:*)
                    IFS=$'\n'
                    options=$(printf '/computer\:%s\n' $(_w32tm_computer_names))
                    ;;

                *)
                    options=('/subkey\:' '/computer\:')
                    options=$(_complement cmds[@] options[@])
                    ;;

            esac
            ;;

        /query)
            if [[ $cword -eq 2 ]]; then
                case ${words[cword]} in

                    /computer\\:*)
                        IFS=$'\n'
                        options=$(printf '/computer\:%s\n' $(_w32tm_computer_names))
                        ;;

                    *)
                        options='/source /configuration /peers /status /computer\:'
                        ;;

                esac

            elif [[ ${words[2]} == /computer\\:* ]]; then
                if [[ $cword -eq 3 ]]; then
                    options='/source /configuration /peers /status'

                elif [[ $cword -eq 4 ]]; then
                    options='/verbose'

                fi
            elif [[ $cword -eq 3 ]]; then
                options='/verbose'

            fi
            ;;

        /debug)
            if [[ $cword -eq 2 ]]; then
                options='/disable /enable'

            elif [[ ${words[2]} == /enable ]]; then
                if [[ $cword -eq 3 ]]; then
                    options='/file\:'

                elif [[ $cword -eq 4 ]]; then
                    options='/size\:'

                elif [[ $cword -eq 5 ]]; then
                    options='/entries\:'

                elif [[ $cword -eq 6 ]]; then
                    options='/truncate'

                fi
            fi
            ;;

    esac

    COMPREPLY=( $( compgen -W '$options' -- "$cur" ) )
    [[ $COMPREPLY == *: ]] && compopt -o nospace
    [[ $COMPREPLY == *, ]] && compopt -o nospace
}

complete -o default -F _w32tm w32tm w32tm.exe

