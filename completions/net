#!/usr/bin/env sh

_windows_users()
{
    # TODO: this might break down if there a lot of users or usernames have spaces, special chars, etc.
    local options=`net user | head -n -2 | tail -n +5`
    options=${options///}
    echo "$options"
}

_windows_net()
{
	COMPREPLY=()

    local cur=$(printf '%q' "${COMP_WORDS[COMP_CWORD]}")
    local options=''
	local command=${COMP_WORDS[1]}
	local prev=${COMP_WORDS[COMP_CWORD-1]}

	if [[ $COMP_CWORD -eq 1 ]] ; then
        local commands='accounts computer config continue file group help helpmsg \
        localgroup pause session share start statistics stop time use user view'

		COMPREPLY=( $( compgen -W "$commands" -- $cur ) )
    elif [[ $prev == "?" ]]; then
		COMPREPLY=( $( compgen -W "" -- $cur ) )
	else
        # Command-specific arguments
        case "$command" in

            accounts)
                options='/forcelogoff: /minpwlen: /maxpwage: /minpwage: /uniquepw: /domain ?'
                ;;

            computer)
                options='?'
                ;;

            config)
                options='server workstation'
                ;;

            continue)
                # TODO: cull list down to only paused services
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`sc query | grep SERVICE_NAME | cut -c 15- | sed 's/.*/"&"/'`
                else
                    options=''
                fi
                ;;

            file)
                options='/close ?'
                ;;

            group)
                # NOTE: only on domain controllers...
                options='?'
                ;;

            help)
                options=''
                ;;

            helpmsg)
                options='?'
                ;;

            localgroup)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`net localgroup | head -n -2 | tail -n +5 | cut -c 2- | sed 's/.*/"&"/'`
                    options+='
?'
                elif [[ $COMP_CWORD -ge 3 ]]; then
                    # TODO: cull the list based off of words present in the command string
                    options=$(_windows_users)
                    options+='/comment: /delete /domain /add'
                fi
                ;;

            pause)
                # TODO: cull list down to only running services
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`sc query | grep SERVICE_NAME | cut -c 15- | sed 's/.*/"&"/'`
                else
                    options=''
                fi
                ;;

            session)
                options='/delete /list ?'
                ;;

            share)
                # TODO: list share names
                options='?'
                ;;

            start)
                # TODO: cull list down to only stopped services
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`sc query | grep SERVICE_NAME | cut -c 15- | sed 's/.*/"&"/'`
                else
                    options=''
                fi
                ;;

            statistics)
                options='server workstation'
                ;;

            stop)
                # TODO: cull list down to only running services
                if [[ $COMP_CWORD -eq 2 ]]; then
                    local IFS=$'\n'
                    options=`sc query | grep SERVICE_NAME | cut -c 15- | sed 's/.*/"&"/'`
                else
                    options=''
                fi
                ;;

            time)
                options='/set /domain /rtsdomain ?'
                ;;

            use)
                # TODO: list recents
                options='/persistent:yes /persistent:no /delete /savecred /smartcard /user: ?'
                ;;

            user)
                if [[ $COMP_CWORD -eq 2 ]]; then
                    options=$(_windows_users)
                else
                    options=''
                fi

                # TODO: cull the list based on options that have been used
                options+='? /delete /add /domain /active:yes /active:no /times:'
                ;;

            view)
                # TODO: ? 
                options=''
                ;;

        esac

        if [ -n "$options" -a -z "$COMPREPLY" ]; then
            COMPREPLY=( $(compgen -W '${options}' -- ${cur} ) )
        fi
    fi

	return 0
}

complete -o default -F _windows_net net net.exe

