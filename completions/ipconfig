#!/usr/bin/env sh

_ipconfig_interfaces()
{
    options=`netsh interface show interface name= | sed -e '/^$/ d' -e 's/.\{47\}//' `

    # escape bash tokenizer strings and separate with newlines
    local IFS=$'\n'
    options=$(printf '%q\n' $options)

    # escape bash completion word breaks that aren't otherwise escaped by "printf '%q'"
    options=`echo "$options" | sed 's/[:=]/\\\&/g'`

    # make lowercase for convenience
    options=${options,,}

    echo "$options"
}

_ipconfig()
{
	COMPREPLY=()

    local cur=$(printf '%q' "${COMP_WORDS[$COMP_CWORD]}")
    local options=''
	local command=${COMP_WORDS[1]}

	if [[ $COMP_CWORD -eq 1 ]] ; then
        local commands='/all /renew /release /allcompartments /flushdns /renew6 /release6 \
        /displaydns /registerdns /showclassid /setclassid /showclassid6 \
        /setclassid6 /?'
		COMPREPLY=( $( compgen -W "$commands" -- ${cur,,} ) )
	else
        # Command-specific arguments
        case "$command" in

            /showclassid6)
                ;&
            /setclassid6)
                ;&
            /showclassid)
                ;&
            /setclassid)
                ;&
            /renew6)
                ;&
            /release6)
                ;&
            /renew)
                ;&
            /release)
                local IFS=$'\n' # interfaces are newline separated
                options=`_ipconfig_interfaces`
                ;;

        esac

        if [ -n "$options" -a -z "$COMPREPLY" ]; then
            COMPREPLY=( $(compgen -W '$options' -- ${cur,,} ) )
        fi
	fi

	return 0
}

complete -o default -F _ipconfig ipconfig ipconfig.exe

